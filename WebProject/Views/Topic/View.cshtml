@using BLL.ViewModels
@model TopicViewModel

@{
	ViewData["Title"] = Model.TopicTitle;
	Layout = "/Views/Shared/_Layout.cshtml";
}

<div class="topic-container">
	<div class="topic-general-info bg-light-programe boder-solid-2p-light">
		<h1> @Model.CourseName </h1>
		<hr />
		<h2 style="margin-bottom: 15px;"> @Model.TopicTitle </h2>
			<div style="margin-bottom: 25px;">
				@{
					string htmlElement = "";
					if (Model.TopicDescription is not null)
					{
						htmlElement = HelperHTML.GenerateUnorderedList(Model.TopicDescription);
					}
				}
				@Html.Raw(htmlElement)
			</div>
			<div class="task-block">
				@{
					if (Model.Assignments != null && Model.Assignments.Count() > 0)
					{
						<h3>Практичні завдання</h3>
						<div class="topic-task-grid">
							@foreach(var task in Model.Assignments)
							{
								<div class="task-holder boder-solid-2p-light">
									<div class="name-and-characteristics">
										<div class="task-name-link">
											@Html.ActionLink(@task.Name, "CodeEditor", "Tasks", new { assignmentID = task.Id })
										</div>
										<div class="task-characteristics-holder gap7">
											<div class="course-charact @task.Type">@task.Type</div>
											@{
												var allowed = task.ProgramingLanguages?.Split(new char[]
												{
													' ', ',', '.', ';', ':', '\t'
												}).Where(str => !string.IsNullOrEmpty(str)).ToArray();
											}
											<div class="course-charact other-characters border-task-char"> 
												@if (allowed is not null)
												{
													if (allowed.Length == 1)
													{
														<div> @allowed[0]</div>
													}
													else
													{
														<div> 
															@allowed.Length
															мови на вибір
														</div>
													}
											}
											</div>
										</div>
									</div>
									<div> @task.Description </div>
								</div>
							}
						</div>
					}
					else
					{
					<div class="no-content-in-topic">
						<div class="no-content-font">
							На даний момент практичних завдань немає
						</div>
					</div>
				}
			}
		</div>
		<div>
			@{
				if (Model.Tests != null && Model.Tests.Count() > 0)
				{
					<h3>Тести</h3>
					<div class="topic-task-grid">
							@foreach(var test in Model.Tests)
							{
								<div class="task-holder boder-solid-2p-light">
									<div class="name-and-characteristics">
										<div class="task-name-link">
											@Html.ActionLink(@test.Name, "CodeEditor", "Tasks", new { assignmentID = test.Id })
										</div>
										<div class="test-holder">
											<div class="course-charact @test.Type">@test.Type</div>
										</div>
									</div>
									<div> @test.Description </div>
								</div>
							}
						</div>
				}
				else
				{
					<div class="no-content-in-topic">
						<div class="no-content-font">
							На даний момент тестів немає
						</div>
					</div>
				}
			}
		</div>
	</div>
</div>