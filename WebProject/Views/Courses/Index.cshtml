@using BLL.Educational_entities.Organization;
@using BLL.ViewModels;
@model IEnumerable<CourseInfoViewModel>

@{
    Layout = "/Views/Shared/_Layout.cshtml";
    string avatarRoute = ""; // Таким чином буду формувати маршрут для прогрузки аватару
    bool isEdit = (bool)(ViewData["IsEditModel"] ?? false);
    bool checkBoxes = (bool)(ViewData["CheckBoxes"] ?? false);
}

<div class="content">
	<div class="courses-header-search courses-view-grid">
    <h1 style="margin-left: 30px;"> @ViewData["Title"] </h1>
    <div class="courses-search-options boder-solid-2p-light">
        <div class="courses-search">
            <form class="courses-form" asp-action="Search">
                <div class="courses-search-input">
                    <input class="courses-search-bar" type="text" name="searchRequest" />
                </div>
                <input type="hidden" name="isEdit" value="@isEdit.ToString()" />
                <button type="submit" class="btn btn-success"> Пошук </button>
            </form>
        </div>
        <div class="courses-ordering">
            <span> Впорядкування за: </span>
            <div class="courses-ordering-actions">
                <a class="link-proj" asp-action="OrderCourses" asp-route-sortOrder="@ViewData["SortByName"]" asp-route-isEdit="@isEdit">
                        Назва
                        @{
                            if (ViewData["SortByName"]?.ToString() == "")
                            {
                                <i class="fas fa-sort-amount-up-alt"></i>
                            }
                            else if (ViewData["SortByName"]?.ToString() == "NameDesc")
                            {
                                <i class="fas fa-sort-amount-up"></i>
                            }
                        }
                    </a>
                <a class="link-proj" asp-action="OrderCourses" asp-route-sortOrder="@ViewData["SortByNickName"]" asp-route-isEdit="@isEdit"> 
                    Нікнейм автора
                        @{
                            if (ViewData["SortByNickName"]?.ToString() == "NickName")
                            {
                                <i class="fas fa-sort-amount-up-alt"></i>
                            }
                            else if (ViewData["SortByNickName"]?.ToString() == "NickNameDesc")
                            {
                                <i class="fas fa-sort-amount-up"></i>
                            }
                        }
                </a>
                    <a class="link-proj" asp-action="OrderCourses" asp-route-sortOrder="@ViewData["SortByTheme"]" asp-route-isEdit="@isEdit">
                        Кількість тем
                        @{
                            if (ViewData["SortByTheme"]?.ToString() == "Topic")
                            {
                                <i class="fas fa-sort-amount-up-alt"></i>
                            }
                            else if (ViewData["SortByTheme"]?.ToString() == "TopicDesc")
                            {
                                <i class="fas fa-sort-amount-up"></i>
                            }
                        }
                </a>
            </div>
        </div>
    </div>
</div>

<div class="courses-content courses-view-grid">
	<div class="courses-filter boder-solid-2p-light">
        <div class="courses-filter-header">
            <h4> Фільтр </h4>
            <a class="link-proj" asp-action="Index"> Повний список </a>
        </div>
        <form method="post" asp-action="FilterCourses" asp-controller="Courses" class="courses-filer-checkbox">
            <input type="hidden" name="isEdit" value="@isEdit.ToString()"/>
            <div class="courses-checkbox-container">
                @{
                    <b> Складність </b>
                    /// Дістаю усі рівні складності курсу
                    var courseLevels = Enum.GetValues(typeof(CourseLevel)).Cast<CourseLevel>();
                    foreach(var level in courseLevels)
                    {
                        /// Створюю для них checkbox, щоб можна було вибрати фільтрацію по рівню складності
                        var levelStr = level.ToString();
                        <div>
                            <input class="filter-checkboxes" type="checkbox" name="filterByLevel" id="@levelStr" value="@levelStr">
                            <label for="@levelStr"> @levelStr </label>
                        </div>
                    }
                    <hr />
                    <b> Тип </b>
                    /// Таким же чином дістаю тип курсу
                    var courseType = Enum.GetValues(typeof(CourseType)).Cast<CourseType>();
                    foreach (var type in courseType)
                    {
                        var typeStr = type.ToString();
                        <div>
                                <input class="filter-checkboxes" type="checkbox" name="filterByType" id="@typeStr" value="@typeStr">
                            <label for="@typeStr"> @typeStr </label>
                            </div>
                        }
                        <hr />
                        <b> К-сть уроків </b>
                        <div>
                            <input class="filter-checkboxes" type="checkbox" name="filterByLessons" id="0 - 4" value="0 - 4">
                            <lable for="0 - 4"> 0 - 4 </lable>
                        </div>
                        <div>
                            <input class="filter-checkboxes" type="checkbox" name="filterByLessons" id="5 - 10" value="5 - 10">
                            <lable for="5 - 10"> 5 - 10 </lable>
                    </div>
                    <div>
                        <input class="filter-checkboxes" type="checkbox" name="filterByLessons" id="10+" value="10+">
                        <lable for="10+"> 10+ </lable>
                    </div>
                }
            </div>
            <div class="courses-filter-actions">
                <button type="submit" class="btn btn-success"> Фільтрувати </button>
            </div>
        </form>
	</div>
    <div class="courses-show boder-solid-2p-light">
        @{
            /// Виведення інформації про курси
            if (Model.Count() == 0)
            {
                /// TODO: Зробити нормальний показ, коли немає курсів
                <div>
                    Курсів нема
                </div>
            }
            else{
                <div class="course-post-info">
                    @foreach(var courseInfo in Model)
                    {
                           avatarRoute = "/avatar/" + courseInfo.AuthorNickName;
                            <div class="courses-info-container bg-light-programe">
                            <div class="courses-additional-info details-style">
                                <h4> @courseInfo.CourseInfo?.Name </h4>
                                    @if (isEdit)
                                    {
                                        <a href="@Url.Action("Edit", "Courses", new { id = courseInfo.CourseInfo.Id })">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                    }
                                @Html.ActionLink("Детальніше", "View", "Courses", new { id = courseInfo.CourseInfo.Id  }, new {@class = "link-proj"})
                                <a href="#"> Відвідати </a>
                                </div>
                            <div class="courses-additional-info gap7">
                                <div class="course-charact @courseInfo.Options.Level.ToString() course-level-border"> @courseInfo.Options.Level </div>
                                <div class="course-charact @courseInfo.Options.Type.ToString()"> @courseInfo.Options.Type </div>
                                @if (courseInfo.Options.AdditionalInfo is not null)
                                {      
                                    foreach(var info in courseInfo.Options.AdditionalInfo)
                                    {
                                        <div class="course-charact other-characters"> @info.Name </div>
                                    }
                                }
                            </div>
                            <div class="course-author-content">
                                <div>
                                    <img src="@avatarRoute" class="author-thumbnail" />
                                </div>
                                <div class="author-info">
                                        @Html.ActionLink(courseInfo.AuthorNickName, "View", "User", new { id = courseInfo.AuthorId }, new {@class = "link-proj"})
                                </div>
                            </div>
                            <div> 
                                    @{
                                        string htmlList = "";
                                        if (courseInfo.CourseInfo.Description is not null)
                                        {
                                            htmlList = HelperHTML.GenerateUnorderedList(courseInfo.CourseInfo.Description);
                                        }
                                    }
                                    @Html.Raw(htmlList)
                            </div>
                        </div> 
                    }
                </div>
            }
        }
    </div>
</div>
</div>

<script>
    var checkboxes = document.querySelectorAll('.filter-checkboxes');

    // Додати обробник події для кожного чекбокса
    checkboxes.forEach(function (checkbox) {
        checkbox.addEventListener('change', function () {
            // Отримати id чекбокса
            let checkboxId = checkbox.id;
            // Та чи був він вибраний/забраний
            let isChecked = checkbox.checked;
            // Зберегти стан чекбокса у local storage
            sessionStorage.setItem(checkboxId, isChecked);
        });
    });

    // Функція, яка дістає стани чекбоксів з local storage
    function restoreCheckboxState() {
        let isRestored = @Json.Serialize(checkBoxes);
        console.log(isRestored);
        if (!isRestored){
            checkboxes.forEach(function (checkbox) {
                let checkboxId = checkbox.id;
                let isChecked = sessionStorage.getItem(checkboxId);
                // Надаю значення відносно того, чи був він нажатий
                checkbox.checked = isChecked === 'true';
            });
        }
    }

    restoreCheckboxState();
</script>


